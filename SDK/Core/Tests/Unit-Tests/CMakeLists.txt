CMAKE_MINIMUM_REQUIRED(VERSION 3.27.0...3.29.6)
# Copyright Â© 2023~ UNKNOWN STRYKER. All Rights Reserved.
PROJECT(FE_UNIT_TEST
        VERSION 0.0
        DESCRIPTION "A group of executable unit test code binaries"
        LANGUAGES CXX)

INCLUDE("${CMAKE_CURRENT_SOURCE_DIR}/../../../CMake/predefined-settings.cmake")
INCLUDE("${CMAKE_CURRENT_SOURCE_DIR}/../../../CMake/frogman-engine.cmake")

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Google-Test/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Benchmark/include)


IF(CMAKE_SYSTEM_NAME STREQUAL "Linux" AND TARGET_CPU_ARCHITECTURE STREQUAL "x86-64")

    SET(UNIT_TEST			
        $<$<CONFIG:DEBUG>:			${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Google-Test/linux/libgtest.a>
        $<$<CONFIG:RELWITHDEBINFO>: ${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Google-Test/linux/libgtest.a>
        $<$<CONFIG:RELEASE>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Google-Test/linux/libgtest.a>
        $<$<CONFIG:MINSIZEREL>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Google-Test/linux/libgtest.a>
    )

    ADD_COMPILE_OPTIONS(-DBENCHMARK_STATIC_DEFINE)
    SET(BENCHMARK_TEST			
        $<$<CONFIG:DEBUG>:			${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Benchmark/linux/Debug/libbenchmark.a>
        $<$<CONFIG:RELWITHDEBINFO>: ${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Benchmark/linux/Release/libbenchmark.a>
        $<$<CONFIG:RELEASE>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Benchmark/linux/Release/libbenchmark.a>
        $<$<CONFIG:MINSIZEREL>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Benchmark/linux/Release/libbenchmark.a>
    )

    SET(FE_CORE
        $<$<CONFIG:DEBUG>:			${CMAKE_CURRENT_SOURCE_DIR}/../../../Core/Binaries/X86-64/Linux/Debug/libFE.Core.a>
        $<$<CONFIG:RELWITHDEBINFO>: ${CMAKE_CURRENT_SOURCE_DIR}/../../../Core/Binaries/X86-64/Linux//RelWithDebInfo/libFE.Core.a>
        $<$<CONFIG:RELEASE>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Core/Binaries/X86-64/Linux/Release/libFE.Core.a>
        $<$<CONFIG:MINSIZEREL>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Core/Binaries/X86-64/Linux/MinSizeRel/libFE.Core.a>
    )

    SET(FE_FRAMEWORK
        $<$<CONFIG:DEBUG>:			${CMAKE_CURRENT_SOURCE_DIR}/../../../Framework/Binaries/X86-64/Linux/Debug/libFE.Framework.a>
        $<$<CONFIG:RELWITHDEBINFO>: ${CMAKE_CURRENT_SOURCE_DIR}/../../../Framework/Binaries/X86-64/Linux//RelWithDebInfo/libFE.Framework.a>
        $<$<CONFIG:RELEASE>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Framework/Binaries/X86-64/Linux/Release/libFE.Framework.a>
        $<$<CONFIG:MINSIZEREL>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Framework/Binaries/X86-64/Linux/MinSizeRel/libFE.Framework.a>
    )
    

ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Windows" AND TARGET_CPU_ARCHITECTURE STREQUAL "x86-64")

    SET(UNIT_TEST			
        $<$<CONFIG:DEBUG>:			${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Google-Test/windows/Debug/gtest.lib>
        $<$<CONFIG:RELWITHDEBINFO>: ${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Google-Test/windows/RelWithDebInfo/gtest.lib>
        $<$<CONFIG:RELEASE>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Google-Test/windows/Release/gtest.lib>
        $<$<CONFIG:MINSIZEREL>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Google-Test/windows/MinSizeRel/gtest.lib>
    )

    ADD_COMPILE_OPTIONS(/DBENCHMARK_STATIC_DEFINE)
    LINK_LIBRARIES(advapi32.lib shlwapi.lib)
    SET(BENCHMARK_TEST			
        $<$<CONFIG:DEBUG>:			${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Benchmark/windows/Debug/benchmark.lib>
        $<$<CONFIG:RELWITHDEBINFO>: ${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Benchmark/windows/RelWithDebInfo/benchmark.lib>
        $<$<CONFIG:RELEASE>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Benchmark/windows/Release/benchmark.lib>
        $<$<CONFIG:MINSIZEREL>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Third-Party/Tools/X86-64/Benchmark/windows/MinSizeRel/benchmark.lib>
    )

    SET(FE_CORE
        $<$<CONFIG:DEBUG>:			${CMAKE_CURRENT_SOURCE_DIR}/../../../Core/Binaries/X86-64/Windows/Debug/FE.Core.lib>
        $<$<CONFIG:RELWITHDEBINFO>: ${CMAKE_CURRENT_SOURCE_DIR}/../../../Core/Binaries/X86-64/Windows//RelWithDebInfo/FE.Core.lib>
        $<$<CONFIG:RELEASE>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Core/Binaries/X86-64/Windows/Release/FE.Core.lib>
        $<$<CONFIG:MINSIZEREL>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Core/Binaries/X86-64/Windows/MinSizeRel/FE.Core.lib>
    )

    SET(FE_FRAMEWORK
        $<$<CONFIG:DEBUG>:			${CMAKE_CURRENT_SOURCE_DIR}/../../../Framework/Binaries/X86-64/Windows/Debug/FE.Framework.lib>
        $<$<CONFIG:RELWITHDEBINFO>: ${CMAKE_CURRENT_SOURCE_DIR}/../../../Framework/Binaries/X86-64/Windows//RelWithDebInfo/FE.Framework.lib>
        $<$<CONFIG:RELEASE>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Framework/Binaries/X86-64/Windows/Release/FE.Framework.lib>
        $<$<CONFIG:MINSIZEREL>:		${CMAKE_CURRENT_SOURCE_DIR}/../../../Framework/Binaries/X86-64/Windows/MinSizeRel/FE.Framework.lib>
    )

ENDIF()



SET(TEST_TARGET "FE.algorithm.math_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.algorithm.math/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.algorithm.math")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

SET(TEST_TARGET "FE.algorithm.string_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.algorithm.string/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.algorithm.string")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

SET(TEST_TARGET "FE.algorithm.utility_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.algorithm.utility/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.algorithm.utility")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

SET(TEST_TARGET "FE.containers_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.containers/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.containers")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

SET(TEST_TARGET "FE.hash_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.hash/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.hash")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

SET(TEST_TARGET "FE.iterator_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.iterator/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.iterator")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

SET(TEST_TARGET "FE.log_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.log/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.log")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

SET(TEST_TARGET "FE.managed_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.managed/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.managed")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

SET(TEST_TARGET "FE.memory_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.memory/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.memory")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

SET(TEST_TARGET "FE.pool_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.pool/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.pool")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

SET(TEST_TARGET "FE.string_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.string/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.string")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

SET(TEST_TARGET "FE.string_view_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.string_view/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.string_view")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

SET(TEST_TARGET "FE.task_test")
ADD_EXECUTABLE(${TEST_TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/FE.task/main.cpp)
SET_TARGET_PROPERTIES(${TEST_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/FE.task")
TARGET_LINK_LIBRARIES(${TEST_TARGET} ${BOOST_STACKTRACE} ${BOOST_CHRONO} ${UNIT_TEST} ${BENCHMARK_TEST} ${FE_CORE})

#ADD_SUBDIRECTORY(FE.framework.reflection)
#ADD_SUBDIRECTORY(FE.framework.predefined_main)