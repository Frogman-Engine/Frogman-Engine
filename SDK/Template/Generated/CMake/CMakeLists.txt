CMAKE_MINIMUM_REQUIRED(VERSION 3.26.0...3.31.0)
# Copyright Â© from 2023 to present, UNKNOWN STRYKER. All Rights Reserved.
PROJECT(FE.ClassReflectionDataLoader
        VERSION 0.0
        DESCRIPTION "An auto-generated DLL that loads Frogman Engine class reflection data."
        LANGUAGES CXX)
        
INCLUDE("${FROGMAN_ENGINE_SDK_DIR}/CMake/frogman-engine.cmake")
INCLUDE("${FROGMAN_ENGINE_SDK_DIR}/CMake/predefined-settings.cmake")


ADD_LIBRARY(${CMAKE_PROJECT_NAME} SHARED ${CMAKE_CURRENT_SOURCE_DIR}/../Source/generated.cpp
)

IF(CMAKE_SYSTEM_NAME STREQUAL "Windows" AND TARGET_CPU_ARCHITECTURE STREQUAL "x86-64")
SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME} PROPERTIES
ARCHIVE_OUTPUT_DIRECTORY_DEBUG          ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Windows/Debug
RUNTIME_OUTPUT_DIRECTORY_DEBUG          ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Windows/Debug
ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Windows/RelWithDebInfo
RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Windows/RelWithDebInfo
ARCHIVE_OUTPUT_DIRECTORY_RELEASE        ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Windows/Release
RUNTIME_OUTPUT_DIRECTORY_RELEASE        ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Windows/Release
ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL     ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Windows/MinSizeRel
RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL     ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Windows/MinSizeRel
)

ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Windows" AND TARGET_CPU_ARCHITECTURE STREQUAL "arm64")
SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME} PROPERTIES
ARCHIVE_OUTPUT_DIRECTORY_DEBUG          ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Windows/Debug
RUNTIME_OUTPUT_DIRECTORY_DEBUG          ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Windows/Debug
ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Windows/RelWithDebInfo
RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Windows/RelWithDebInfo
ARCHIVE_OUTPUT_DIRECTORY_RELEASE        ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Windows/Release
RUNTIME_OUTPUT_DIRECTORY_RELEASE        ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Windows/Release
ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL     ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Windows/MinSizeRel
RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL     ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Windows/MinSizeRel
)

ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Linux" AND TARGET_CPU_ARCHITECTURE STREQUAL "x86-64")
SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME} PROPERTIES
ARCHIVE_OUTPUT_DIRECTORY_DEBUG          ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Linux/Debug
RUNTIME_OUTPUT_DIRECTORY_DEBUG          ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Linux/Debug
ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Linux/RelWithDebInfo
RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Linux/RelWithDebInfo
ARCHIVE_OUTPUT_DIRECTORY_RELEASE        ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Linux/Release
RUNTIME_OUTPUT_DIRECTORY_RELEASE        ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Linux/Release
ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL     ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Linux/MinSizeRel
RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL     ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/X86-64/Linux/MinSizeRel
)

ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Linux" AND TARGET_CPU_ARCHITECTURE STREQUAL "arm64")
SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME} PROPERTIES
ARCHIVE_OUTPUT_DIRECTORY_DEBUG          ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Linux/Debug
RUNTIME_OUTPUT_DIRECTORY_DEBUG          ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Linux/Debug
ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Linux/RelWithDebInfo
RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Linux/RelWithDebInfo
ARCHIVE_OUTPUT_DIRECTORY_RELEASE        ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Linux/Release
RUNTIME_OUTPUT_DIRECTORY_RELEASE        ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Linux/Release
ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL     ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Linux/MinSizeRel
RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL     ${CMAKE_CURRENT_SOURCE_DIR}/../Binaries/ARM64/Linux/MinSizeRel
)

ELSE()
    MESSAGE(FATAL_ERROR "System not selected.")
ENDIF()