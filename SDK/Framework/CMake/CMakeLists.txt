CMAKE_MINIMUM_REQUIRED(VERSION 3.25.0...3.31.2)
# Copyright Â© from 2023 to present, UNKNOWN STRYKER. All Rights Reserved.
PROJECT(FE.Framework
        VERSION 0.0
        DESCRIPTION "Frogman Engine Framework library"
        LANGUAGES CXX)
        
GET_FILENAME_COMPONENT(FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR ${CMAKE_CURRENT_LIST_DIR} ABSOLUTE)
INCLUDE("${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../../CMake/predefined-settings.cmake")
INCLUDE("${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../../CMake/frogman-engine.cmake")

ADD_LIBRARY(${CMAKE_PROJECT_NAME} STATIC  ${FE_FRAMEWORK_HEADER}
${FE_FRAMEWORK_REFLECTION}
${FE_FRAMEWORK_OBJECT_HIERARCHY}
${FE_FRAMEWORK_CONTROLLER_HIERARCHY}
${FE_FRAMEWORK_SOURCES}
)

IF(CMAKE_SYSTEM_NAME STREQUAL "Windows" AND TARGET_CPU_ARCHITECTURE STREQUAL "x86-64")
SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME} PROPERTIES
ARCHIVE_OUTPUT_DIRECTORY_DEBUG          ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/X86-64/Windows/Debug
ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/X86-64/Windows/RelWithDebInfo
ARCHIVE_OUTPUT_DIRECTORY_RELEASE        ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/X86-64/Windows/Release
ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL     ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/X86-64/Windows/MinSizeRel
)

ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Windows" AND TARGET_CPU_ARCHITECTURE STREQUAL "arm64")
SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME} PROPERTIES
ARCHIVE_OUTPUT_DIRECTORY_DEBUG          ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/ARM64/Windows/Debug
ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/ARM64/Windows/RelWithDebInfo
ARCHIVE_OUTPUT_DIRECTORY_RELEASE        ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/ARM64/Windows/Release
ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL     ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/ARM64/Windows/MinSizeRel
)

ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Linux" AND TARGET_CPU_ARCHITECTURE STREQUAL "x86-64")
SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME} PROPERTIES
ARCHIVE_OUTPUT_DIRECTORY_DEBUG          ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/X86-64/Linux/Debug
ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/X86-64/Linux/RelWithDebInfo
ARCHIVE_OUTPUT_DIRECTORY_RELEASE        ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/X86-64/Linux/Release
ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL     ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/X86-64/Linux/MinSizeRel
)

ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Linux" AND TARGET_CPU_ARCHITECTURE STREQUAL "arm64")
SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME} PROPERTIES
ARCHIVE_OUTPUT_DIRECTORY_DEBUG          ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/ARM64/Linux/Debug
ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/ARM64/Linux/RelWithDebInfo
ARCHIVE_OUTPUT_DIRECTORY_RELEASE        ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/ARM64/Linux/Release
ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL     ${FE_FRAMEWORK_CMAKE_CURRENT_LIST_DIR}/../Binaries/ARM64/Linux/MinSizeRel
)

ELSE()
    MESSAGE(FATAL_ERROR "System not selected.")
ENDIF()